// Generated by Apple Swift version 4.2.1 effective-4.1.50 (swiftlang-1000.11.42 clang-1000.11.45.1)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="lnGRPCWrapper",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC13lnGRPCWrapper7grpcAPI")
@interface grpcAPI : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setUpWithUrl:(NSString * _Nonnull)url certificate:(NSString * _Nonnull)certificate macaroon:(NSString * _Nonnull)macaroon;
- (void)getInfoWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)exportAllChannelBackupsWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)getWalletBalanceWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)getChannelBalanceWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)getTransactionsWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)listChannelsWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)listInvoicesWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)pendingChannelsWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)listPaymentsWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)sendPaymentWithPaymentRequest:(NSString * _Nonnull)paymentRequest amount:(int64_t)amount callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)newAddressWithAddressType:(NSString * _Nonnull)addressType callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)decodePayReqWithPayReq:(NSString * _Nonnull)payReq callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)addInvoiceWithAmount:(int64_t)amount expiry:(int64_t)expiry memo:(NSString * _Nonnull)memo callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)lookUpInvoiceWithRhash:(NSString * _Nonnull)rhash callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)connectPeerWithHost:(NSString * _Nonnull)host pubkey:(NSString * _Nonnull)pubkey callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)openChannelWithLocalFundingAmount:(int64_t)localFundingAmount pubkey:(NSString * _Nonnull)pubkey isPrivate:(BOOL)isPrivate callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)subscribeInvoicesWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)subscribeTransactionsWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)closeChannelWithTxid:(NSString * _Nonnull)txid output:(int64_t)output force:(BOOL)force callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)getNodeInfoWithPubkey:(NSString * _Nonnull)pubkey callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)sendCoinsWithAmount:(int64_t)amount address:(NSString * _Nonnull)address fee:(int64_t)fee callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
@end


SWIFT_CLASS("_TtC13lnGRPCWrapper12lndMobileAPI")
@interface lndMobileAPI : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)setLogWithCallback:(void (^ _Nonnull)(NSString * _Nullable))callback;
- (void)sendCoinsWithAmount:(int64_t)amount address:(NSString * _Nonnull)address fee:(int64_t)fee callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)startSetUpEnvironmentWithChain:(NSString * _Nonnull)chain bootstrap:(BOOL)bootstrap callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)startLNDWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)stopLNDWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)generateSeedWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)getInfoWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)exportAllChannelBackupsWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)getChannelBalanceWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)getWalletBalanceWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)createWalletWithWalletPassword:(NSString * _Nonnull)walletPassword recoveryWindow:(int32_t)recoveryWindow cipherSeedMnemonic:(NSArray<NSString *> * _Nonnull)cipherSeedMnemonic channelBackup:(NSString * _Nonnull)channelBackup callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)getTransactionsWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)listChannelsWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)pendingChannelsWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)listPaymentsWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)listInvoicesWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)connectPeerWithHost:(NSString * _Nonnull)host pubkey:(NSString * _Nonnull)pubkey callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)closeChannelWithTxid:(NSString * _Nonnull)txid output:(int64_t)output force:(BOOL)force callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)openChannelWithLocalFundingAmount:(int64_t)localFundingAmount pubkey:(NSString * _Nonnull)pubkey isPrivate:(BOOL)isPrivate callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)sendPaymentSyncWithPaymentRequest:(NSString * _Nonnull)paymentRequest amount:(int64_t)amount callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)sendPaymentWithPaymentRequest:(NSString * _Nonnull)paymentRequest amount:(int64_t)amount callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)decodePayReqWithPayReq:(NSString * _Nonnull)payReq callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)getNodeInfoWithPubkey:(NSString * _Nonnull)pubkey callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)subscribeTransactionsWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)subscribeInvoicesWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)lookUpInvoiceWithRhash:(NSString * _Nonnull)rhash callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)addInvoiceWithAmount:(int64_t)amount expiry:(int64_t)expiry memo:(NSString * _Nonnull)memo callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)newAddressWithAddressType:(NSString * _Nonnull)addressType callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)unlockWalletWithWalletPassword:(NSString * _Nonnull)walletPassword recoveryWindow:(int32_t)recoveryWindow channelBackup:(NSString * _Nonnull)channelBackup callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)deleteDataWithCallback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
@end

@class UIViewController;

SWIFT_CLASS("_TtC13lnGRPCWrapper5utils")
@interface utils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (int64_t)getFreeDiskSpace SWIFT_WARN_UNUSED_RESULT;
- (void)setLogWithCallback:(void (^ _Nonnull)(NSString * _Nullable))callback;
- (void)uploadFileWithVc:(UIViewController * _Nonnull)vc clientID:(NSString * _Nonnull)clientID folderName:(NSString * _Nonnull)folderName fileName:(NSString * _Nonnull)fileName passphraseHash:(NSString * _Nonnull)passphraseHash callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)linkGoogleDriveWithVc:(UIViewController * _Nonnull)vc clientID:(NSString * _Nonnull)clientID callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)downloadFileWithVc:(UIViewController * _Nonnull)vc clientID:(NSString * _Nonnull)clientID folderName:(NSString * _Nonnull)folderName fileName:(NSString * _Nonnull)fileName passphraseHash:(NSString * _Nonnull)passphraseHash callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)signOut;
@end


SWIFT_CLASS("_TtC13lnGRPCWrapper9websocket")
@interface websocket : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)startWebSocketWithUrl:(NSString * _Nonnull)url callback:(void (^ _Nonnull)(NSString * _Nullable, NSString * _Nullable))callback;
- (void)sendWebSocketMessageWithMsg:(NSString * _Nonnull)msg;
- (void)closeWebSocket;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
